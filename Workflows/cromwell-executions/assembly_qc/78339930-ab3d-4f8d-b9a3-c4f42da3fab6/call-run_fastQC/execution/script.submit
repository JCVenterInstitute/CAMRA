#!/bin/bash
# make sure there is no preexisting Docker CID file
rm -f /Users/dmatute/Documents/CAMRA/Scripts/GitHub/CAMRA/Workflows/cromwell-executions/assembly_qc/78339930-ab3d-4f8d-b9a3-c4f42da3fab6/call-run_fastQC/execution/docker_cid
# run as in the original configuration without --rm flag (will remove later)
docker run \
  --cidfile /Users/dmatute/Documents/CAMRA/Scripts/GitHub/CAMRA/Workflows/cromwell-executions/assembly_qc/78339930-ab3d-4f8d-b9a3-c4f42da3fab6/call-run_fastQC/execution/docker_cid \
  -i \
   \
  --entrypoint /bin/bash \
  -v /Users/dmatute/Documents/CAMRA/Scripts/GitHub/CAMRA/Workflows/cromwell-executions/assembly_qc/78339930-ab3d-4f8d-b9a3-c4f42da3fab6/call-run_fastQC:/cromwell-executions/assembly_qc/78339930-ab3d-4f8d-b9a3-c4f42da3fab6/call-run_fastQC:delegated \
  staphb/fastqc@sha256:f5d8f72753269e0cee071fe198c89a59a1f8071445739b3398f7818f7cb039ae /cromwell-executions/assembly_qc/78339930-ab3d-4f8d-b9a3-c4f42da3fab6/call-run_fastQC/execution/script

# get the return code (working even if the container was detached)
rc=$(docker wait `cat /Users/dmatute/Documents/CAMRA/Scripts/GitHub/CAMRA/Workflows/cromwell-executions/assembly_qc/78339930-ab3d-4f8d-b9a3-c4f42da3fab6/call-run_fastQC/execution/docker_cid`)

# remove the container after waiting
docker rm `cat /Users/dmatute/Documents/CAMRA/Scripts/GitHub/CAMRA/Workflows/cromwell-executions/assembly_qc/78339930-ab3d-4f8d-b9a3-c4f42da3fab6/call-run_fastQC/execution/docker_cid`

# return exit code
exit $rc
