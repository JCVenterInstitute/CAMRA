#!/bin/bash

cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution
tmpDir=$(mkdir -p "/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/tmp.0452b884" && echo "/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/tmp.0452b884")
chmod 777 "$tmpDir"
export _JAVA_OPTIONS=-Djava.io.tmpdir="$tmpDir"
export TMPDIR="$tmpDir"
export HOME="$HOME"
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution

)
out5b7c024b="${tmpDir}/out.$$" err5b7c024b="${tmpDir}/err.$$"
mkfifo "$out5b7c024b" "$err5b7c024b"
trap 'rm "$out5b7c024b" "$err5b7c024b"' EXIT
touch '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution/stdout' '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution/stderr'
tee '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution/stdout' < "$out5b7c024b" &
tee '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution/stderr' < "$err5b7c024b" >&2 &
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution


python3 -m resfinder --version | tee RESFINDER_VERSION
# Versions obtianed from the dockerfile
echo "1.4.14" | tee KMA_VERSION 
echo "resfinder_db=2.3.1, pointfinder_db=4.1.0, disinfinder_db=2.0.1" | tee DB_VERSION
date | tee DATE


unzip_and_move() {
    local file="$1"
    local output="$2"
    if [[ "$file" == *.gz ]]; then
        echo "We need to unzip $file."
        gunzip -c "$file" > "$output" && echo "    > unzip & mv completed"
    else
        echo "We do not need to unzip $file."
        mv "$file" "$output" && echo "    > mv successful"
    fi
}

unzip_and_move "/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/inputs/-862410195/GCA_030128905.1_ASM3012890v1_genomic.fna" "./assembly.fasta"



# Make directories that will store the resfinder run wiht the assembly file and the read file 
mkdir assembly_output read_output 

case "Organism is set as: Klebsiella pneumoniae" in
    *"Acinetobacter"*"baumannii"*)
        species="Acinetobacter_baumannii";;
    *"Burkholderia"*"cepacia"*)
        species="Burkholderia_cepacia";;
    *"Burkholderia"*"pseudomallei"*)
        species="Burkholderia_pseudomallei";;
    *"Campylobacter"*"coli"* | *"Campylobacter"*"jejuni"*)
        species="Campylobacter";;
    *"Citrobacter"*"freundii"*)
        species="Citrobacter_freundii";;
    *"Clostridioides"*"difficile"*)
        species="Clostridioides_difficile";;
    *"Enterobacter"*"asburiae"*)
        species="Enterobacter_asburiae";;
    *"Enterobacter"*"asburiae"*)
        species="Enterobacter_asburiae";;
    *"Enterococcus"*"faecalis"*)
        species="Enterococcus_faecalis";;
    *"Enterococcus"*"faecium"* | *"Enterococcus"*"hirae"*)
        species="Enterococcus_faecium";;
    *"Escherichia"* | *"Shigella"*)
        species="Escherichia";;
    *"Klebsiella"*"oxytoca"*)
        species="Klebsiella_oxytoca";;
    *"Klebsiella"*"pneumoniae"*)
        species="Klebsiella_pneumoniae";;
    *"Neisseria"*"gonorrhoeae"*)
        species="Neisseria_gonorrhoeae";;
    *"Neisseria"*"meningitidis"*)
        species="Neisseria_meningitidis";;
    *"Pseudomonas"*"aeruginosa"*)
        species="Pseudomonas_aeruginosa";;
    *"Salmonella"*)
        species="Salmonella";;
    *"Serratia"*"marcescens"*)
        species="Serratia_marcescens";;
    *"Staphylococcus"*"aureus"*)
        species="Staphylococcus_aureus";;
    *"Staphylococcus"*"pseudintermedius"*)
        species="Staphylococcus_pseudintermedius";;
    *"Streptococcus"*"agalactiae"*)
        species="Streptococcus_agalactiae";;
    *"Streptococcus"*"pneumoniae"* | *"Streptococcus"*"mitis"*)
        species="Streptococcus_pneumoniae";;
    *"Streptococcus"*"pyogenes"*)
        species="Streptococcus_pyogenes";;
    *"Vibrio"*"cholerae"*)
        species="Vibrio_cholerae";;
    *"Vibrio"*"parahaemolyticus"*)
        species="Vibrio_parahaemolyticus";;
    *"Vibrio"*"vulnificus"*)
        species="Vibrio_vulnificus";;
    *)
        echo "species is not mapped.";;
esac

echo "species is set to:" ${species}

# Run the assembly file on resfinder, only does BLAST
python3 -m resfinder --inputfasta assembly.fasta --species species  --disinfectant --acquired --point --ignore_missing_species --outputPath assembly_output  --min_cov 0.6  --threshold 0.9 


# Run the assembly file on resfinder, does BLAST and KMA
python3 -m resfinder --inputfastq read1.fastq read2.fastq --species species --disinfectant --acquired --point --ignore_missing_species --outputPath read_output  --min_cov 0.6  --threshold 0.9  


rm assembly.fasta

mv assembly_output/ResFinder_results_tab.txt assembly_output/resfinder_asm_results_tab.txt
)  > "$out5b7c024b" 2> "$err5b7c024b"
echo $? > /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution/rc.tmp
(
# add a .file in every empty directory to facilitate directory delocalization on the cloud
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution
find . -type d -exec sh -c '[ -z "$(ls -A '"'"'{}'"'"')" ] && touch '"'"'{}'"'"'/.file' \;
)
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution
sync


)
mv /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution/rc.tmp /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_ResFinder/execution/rc
