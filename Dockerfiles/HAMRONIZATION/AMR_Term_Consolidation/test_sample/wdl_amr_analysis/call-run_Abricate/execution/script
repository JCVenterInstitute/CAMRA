#!/bin/bash

cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution
tmpDir=$(mkdir -p "/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/tmp.6c28b24b" && echo "/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/tmp.6c28b24b")
chmod 777 "$tmpDir"
export _JAVA_OPTIONS=-Djava.io.tmpdir="$tmpDir"
export TMPDIR="$tmpDir"
export HOME="$HOME"
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution

)
out5b7c024b="${tmpDir}/out.$$" err5b7c024b="${tmpDir}/err.$$"
mkfifo "$out5b7c024b" "$err5b7c024b"
trap 'rm "$out5b7c024b" "$err5b7c024b"' EXIT
touch '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution/stdout' '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution/stderr'
tee '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution/stdout' < "$out5b7c024b" &
tee '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution/stderr' < "$err5b7c024b" >&2 &
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution


date | tee DATE
echo $(abricate --version 2>&1) | sed 's/abricate //' | tee VERSION

#Updating the databases
abricate-get_db --db ncbi --force
abricate-get_db --db card --force
abricate-get_db --db resfinder --force
#abricate-get_db --db megares --force #can not update
abricate-get_db --db vfdb --force
abricate-get_db --db argannot --force

echo $(abricate --list) | tee DB_VERSION
grep -w -f <(echo -e "ncbi\ncard\nresfinder\nvfdb\nargannot") DB_VERSION > DB_VERSION

# Function to run abricate for a specific database and save the hits
run_abricate() {
    local db="$1"
    local output_file="abricate_GCA_030128905_${db}_hits.tsv"
    abricate --threads 4 --db "$db" /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/inputs/-862410195/GCA_030128905.1_ASM3012890v1_genomic.fna > "$output_file"

    # Parse out gene names into list of strings, comma-separated, final comma at end removed by sed
    local genes=$(awk -F '\t' '{ print $6 }' "$output_file" | tail -n+2 | tr '\n' ',' | sed 's/.$//')

    # If variable for list of genes is EMPTY, write string saying it is empty
    if [ -z "$genes" ]; then
        genes="No genes detected by ABRicate $db db"
    fi

    # Output genes to file
    echo "$genes" > "ABRICATE_GENES_${db^^}"
}

# Run abricate for each database
databases=("ncbi" "card" "resfinder" "vfdb" "argannot")
for db in "${databases[@]}"; do
    run_abricate "$db"
done
)  > "$out5b7c024b" 2> "$err5b7c024b"
echo $? > /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution/rc.tmp
(
# add a .file in every empty directory to facilitate directory delocalization on the cloud
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution
find . -type d -exec sh -c '[ -z "$(ls -A '"'"'{}'"'"')" ] && touch '"'"'{}'"'"'/.file' \;
)
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution
sync


)
mv /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution/rc.tmp /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_Abricate/execution/rc
