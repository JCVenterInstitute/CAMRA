#!/bin/bash

cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution
tmpDir=$(mkdir -p "/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/tmp.e1514e4f" && echo "/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/tmp.e1514e4f")
chmod 777 "$tmpDir"
export _JAVA_OPTIONS=-Djava.io.tmpdir="$tmpDir"
export TMPDIR="$tmpDir"
export HOME="$HOME"
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution

)
out5b7c024b="${tmpDir}/out.$$" err5b7c024b="${tmpDir}/err.$$"
mkfifo "$out5b7c024b" "$err5b7c024b"
trap 'rm "$out5b7c024b" "$err5b7c024b"' EXIT
touch '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution/stdout' '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution/stderr'
tee '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution/stdout' < "$out5b7c024b" &
tee '/cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution/stderr' < "$err5b7c024b" >&2 &
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution


date | tee DATE
amrfinder --version |tee VERSION
amrfinder --database_version 2>/dev/null | grep "Database version" | sed 's|Database version: ||' | tee DB_VERSION

# When you run 'amrfinder -l' you get a list of the available organisms. Here, the sample's organism is aligned to its match within the database if available. 
    # The list was created with the databse wersion 2024-01-31.1 on April 2nd 2024. 
    # The list will be updated in subsequent versions of this wdl. Users are welcome to update it as well.  
case "Organism is set as: Klebsiella pneumoniae" in
    *"Acinetobacter"*"baumannii"*)
        amrfinder_organism="Acinetobacter_baumannii";;
    *"Burkholderia"*"cepacia"*)
        amrfinder_organism="Burkholderia_cepacia";;
    *"Burkholderia"*"pseudomallei"*)
        amrfinder_organism="Burkholderia_pseudomallei";;
    *"Campylobacter"*"coli"* | *"Campylobacter"*"jejuni"*)
        amrfinder_organism="Campylobacter";;
    *"Citrobacter"*"freundii"*)
        amrfinder_organism="Citrobacter_freundii";;
    *"Clostridioides"*"difficile"*)
        amrfinder_organism="Clostridioides_difficile";;
    *"Enterobacter"*"asburiae"*)
        amrfinder_organism="Enterobacter_asburiae";;
    *"Enterobacter"*"asburiae"*)
        amrfinder_organism="Enterobacter_asburiae";;
    *"Enterococcus"*"faecalis"*)
        amrfinder_organism="Enterococcus_faecalis";;
    *"Enterococcus"*"faecium"* | *"Enterococcus"*"hirae"*)
        amrfinder_organism="Enterococcus_faecium";;
    *"Escherichia"* | *"Shigella"*)
        amrfinder_organism="Escherichia";;
    *"Klebsiella"*"oxytoca"*)
        amrfinder_organism="Klebsiella_oxytoca";;
    *"Klebsiella"*"pneumoniae"*)
        amrfinder_organism="Klebsiella_pneumoniae";;
    *"Neisseria"*"gonorrhoeae"*)
        amrfinder_organism="Neisseria_gonorrhoeae";;
    *"Neisseria"*"meningitidis"*)
        amrfinder_organism="Neisseria_meningitidis";;
    *"Pseudomonas"*"aeruginosa"*)
        amrfinder_organism="Pseudomonas_aeruginosa";;
    *"Salmonella"*)
        amrfinder_organism="Salmonella";;
    *"Serratia"*"marcescens"*)
        amrfinder_organism="Serratia_marcescens";;
    *"Staphylococcus"*"aureus"*)
        amrfinder_organism="Staphylococcus_aureus";;
    *"Staphylococcus"*"pseudintermedius"*)
        amrfinder_organism="Staphylococcus_pseudintermedius";;
    *"Streptococcus"*"agalactiae"*)
        amrfinder_organism="Streptococcus_agalactiae";;
    *"Streptococcus"*"pneumoniae"* | *"Streptococcus"*"mitis"*)
        amrfinder_organism="Streptococcus_pneumoniae";;
    *"Streptococcus"*"pyogenes"*)
        amrfinder_organism="Streptococcus_pyogenes";;
    *"Vibrio"*"cholerae"*)
        amrfinder_organism="Vibrio_cholerae";;
    *"Vibrio"*"parahaemolyticus"*)
        amrfinder_organism="Vibrio_parahaemolyticus";;
    *"Vibrio"*"vulnificus"*)
        amrfinder_organism="Vibrio_vulnificus";;
    *)
        echo "amrfinder_organism is not mapped.";;
esac

echo "amrfinder_organism is set to:" ${amrfinder_organism}


# if amrfinder_organism variable is set, use --organism flag, otherwise do not use --organism flag
if [[ -v amrfinder_organism ]] ; then
    echo "Running AMRFinder+ WITH amrfinder_organism."
    # always use --plus flag, others may be left out if param is optional and not supplied 
    amrfinder --plus \
        --organism ${amrfinder_organism} \
        --nucleotide /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/inputs/-862410195/GCA_030128905.1_ASM3012890v1_genomic.fna \
        >  amrfinderplus_output_all.txt

else 
    echo "Running AMRFinder+ WITHOUT amrfinder_organism."
    # always use --plus flag, others may be left out if param is optional and not supplied 
    amrfinder --plus \
        --nucleotide /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/inputs/-862410195/GCA_030128905.1_ASM3012890v1_genomic.fna \
        >  amrfinderplus_output_all.txt
    fi

# Element Type possibilities: AMR, STRESS, and VIRULENCE 
# create headers for 3 output files; tee to 3 files and redirect STDOUT to dev null so it doesn't print to log file
head -n 1 amrfinderplus_output_all.txt | tee amrfinderplus_stress.tsv amrfinderplus_virulence.tsv amrfinderplus_amr.tsv >/dev/null
# looks for all rows with STRESS, AMR, or VIRULENCE and append to TSVs
grep -F 'STRESS' amrfinderplus_output_all.txt >> amrfinderplus_stress.tsv || true
grep -F 'VIRULENCE' amrfinderplus_output_all.txt >> amrfinderplus_virulence.tsv || true
# || true is so that the final grep exits with code 0, preventing failures
grep -F 'AMR' amrfinderplus_output_all.txt >> amrfinderplus_amr.tsv || true
)  > "$out5b7c024b" 2> "$err5b7c024b"
echo $? > /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution/rc.tmp
(
# add a .file in every empty directory to facilitate directory delocalization on the cloud
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution
find . -type d -exec sh -c '[ -z "$(ls -A '"'"'{}'"'"')" ] && touch '"'"'{}'"'"'/.file' \;
)
(
cd /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution
sync


)
mv /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution/rc.tmp /cromwell-executions/amr_analysis/5b7c024b-edf5-47b4-a458-23daa1bee1cd/call-run_AMRfinderPlus/execution/rc
